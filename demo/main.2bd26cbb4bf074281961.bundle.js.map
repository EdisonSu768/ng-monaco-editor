{"version":3,"file":"main.2bd26cbb4bf074281961.bundle.js","sources":["webpack:///./src/monaco-common-editor.component.ts"],"sourcesContent":["import * as tslib_1 from \"tslib\";\nvar _a, _b;\nimport { ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild, } from '@angular/core';\nimport isEqual from 'lodash.isequal';\nimport debounce from 'lodash.debounce';\nconst DEFAULT_RELAYOUT_INTERVAL = 100;\n/**\n * Wraps powerful Monaco Editor for simpilicity use in Angular.\n */\nexport class MonacoCommonEditorComponent {\n    constructor(monacoEditorConfig, monacoProvider, cdr, resizeSensor) {\n        this.monacoEditorConfig = monacoEditorConfig;\n        this.monacoProvider = monacoProvider;\n        this.cdr = cdr;\n        this.resizeSensor = resizeSensor;\n        this._value = '';\n        this.destroyed = false;\n        this.disposables = [];\n        this.monacoLoaded = false;\n        /**\n         * Events emitted when monaco editor changed.\n         */\n        this.monacoEditorChanged = new EventEmitter();\n        /**\n         * Events emitted when monaco editor blurs.\n         */\n        this.blur = new EventEmitter();\n        // Following are APIs required by ControlValueAccessor\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    ngDoCheck() {\n        // We should reset the editor when options change.\n        if (this._prevOptions && !isEqual(this._prevOptions, this.options)) {\n            this.initEditor();\n        }\n        this._prevOptions = this.options;\n    }\n    ngOnInit() {\n        this.initEditor();\n    }\n    ngAfterViewInit() {\n        const layoutInterval = this.monacoEditorConfig.autoLayoutInterval == null\n            ? DEFAULT_RELAYOUT_INTERVAL\n            : this.monacoEditorConfig.autoLayoutInterval;\n        if (layoutInterval) {\n            this.relayoutFunction = debounce(() => {\n                if (this.editor) {\n                    this.editor.layout();\n                }\n            }, layoutInterval);\n            this.resizeSensorInstance = this.resizeSensor.registerResize(this.monacoContainer.nativeElement, this.relayoutFunction);\n        }\n    }\n    ngOnChanges({ modelUri }) {\n        if (modelUri && !modelUri.isFirstChange()) {\n            // If modelUri is changed, we need to recreate the editor to reflect the change.\n            this.initEditor();\n        }\n    }\n    ngOnDestroy() {\n        this.dispose();\n        if (this.resizeSensorInstance) {\n            this.resizeSensorInstance.detach(this.relayoutFunction);\n        }\n        this.relayoutFunction = null;\n        this.resizeSensorInstance = null;\n        this.destroyed = true;\n    }\n    dispose() {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n        if (this.model && !this.model.isDisposed()) {\n            this.model.dispose();\n        }\n        this.disposables.forEach(disposable => disposable.dispose());\n        this.editor = null;\n        this.model = null;\n        this.disposables = [];\n    }\n    writeValue(value) {\n        this._value = value || '';\n        // Fix for value change while dispose in process.\n        if (this.editor) {\n            this.updateEditorValue(this._value);\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    createModel(value, uri) {\n        const { monaco } = this.monacoProvider;\n        return monaco.editor.createModel(value, this.options.language, uri ? monaco.Uri.parse(uri) : undefined);\n    }\n    initEditor() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            yield this.monacoProvider.initMonaco();\n            this.monacoLoaded = true;\n            this.dispose();\n            if (!this.destroyed) {\n                this.editor = this.createEditor();\n                this.listenModelChanges();\n                this.monacoEditorChanged.emit(this.editor);\n                this.modelId = this.model.id;\n                this.cdr.markForCheck();\n            }\n        });\n    }\n    listenModelChanges() {\n        this.disposables = [];\n        this.disposables.push(this.model.onDidChangeContent(() => {\n            const value = this.model.getValue();\n            if (this._value === value) {\n                return;\n            }\n            this.onChange(value);\n            this._value = value;\n            this.cdr.markForCheck();\n        }));\n        this.disposables.push(this.editor.onDidChangeModel(() => {\n            this.cdr.markForCheck();\n        }));\n        this.disposables.push(this.editor.onDidBlurEditorWidget(() => {\n            this.onTouched();\n            this.blur.emit();\n        }));\n    }\n    updateEditorValue(value) {\n        this.model.setValue(value);\n    }\n}\ntslib_1.__decorate([\n    ViewChild('monacoContainer'),\n    tslib_1.__metadata(\"design:type\", typeof (_a = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _a : Object)\n], MonacoCommonEditorComponent.prototype, \"monacoContainer\", void 0);\ntslib_1.__decorate([\n    ViewChild('monacoAnchor'),\n    tslib_1.__metadata(\"design:type\", typeof (_b = typeof ElementRef !== \"undefined\" && ElementRef) === \"function\" ? _b : Object)\n], MonacoCommonEditorComponent.prototype, \"monacoAnchor\", void 0);\ntslib_1.__decorate([\n    Input(),\n    tslib_1.__metadata(\"design:type\", Object)\n], MonacoCommonEditorComponent.prototype, \"options\", void 0);\ntslib_1.__decorate([\n    Input(),\n    tslib_1.__metadata(\"design:type\", String)\n], MonacoCommonEditorComponent.prototype, \"modelUri\", void 0);\ntslib_1.__decorate([\n    Output(),\n    tslib_1.__metadata(\"design:type\", Object)\n], MonacoCommonEditorComponent.prototype, \"monacoEditorChanged\", void 0);\ntslib_1.__decorate([\n    Output(),\n    tslib_1.__metadata(\"design:type\", Object)\n], MonacoCommonEditorComponent.prototype, \"blur\", void 0);\ntslib_1.__decorate([\n    HostBinding('attr.model-id'),\n    tslib_1.__metadata(\"design:type\", String)\n], MonacoCommonEditorComponent.prototype, \"modelId\", void 0);\n//# sourceMappingURL=data:application/json;base64,"],"mappings":"AACA","sourceRoot":""}