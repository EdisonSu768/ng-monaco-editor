{"version":3,"file":"main.65e264d23363d2903199.bundle.js","sources":["webpack:///./src/monaco-common-editor.component.ts"],"sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar lodash_debounce_1 = __importDefault(require(\"lodash.debounce\"));\nvar lodash_isequal_1 = __importDefault(require(\"lodash.isequal\"));\nvar DEFAULT_RELAYOUT_INTERVAL = 100;\n/**\n * Wraps powerful Monaco Editor for simpilicity use in Angular.\n */\nvar MonacoCommonEditorComponent = /** @class */ (function () {\n    function MonacoCommonEditorComponent(monacoEditorConfig, monacoProvider, cdr, resizeSensor) {\n        this.monacoEditorConfig = monacoEditorConfig;\n        this.monacoProvider = monacoProvider;\n        this.cdr = cdr;\n        this.resizeSensor = resizeSensor;\n        this._value = '';\n        this.destroyed = false;\n        this.disposables = [];\n        this.monacoLoaded = false;\n        /**\n         * Events emitted when monaco editor changed.\n         */\n        this.monacoEditorChanged = new core_1.EventEmitter();\n        /**\n         * Events emitted when monaco editor blurs.\n         */\n        this.blur = new core_1.EventEmitter();\n        // Following are APIs required by ControlValueAccessor\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    MonacoCommonEditorComponent.prototype.ngDoCheck = function () {\n        // We should reset the editor when options change.\n        if (this._prevOptions && !lodash_isequal_1.default(this._prevOptions, this.options)) {\n            this.initEditor();\n        }\n        this._prevOptions = this.options;\n    };\n    MonacoCommonEditorComponent.prototype.ngOnInit = function () {\n        this.initEditor();\n    };\n    MonacoCommonEditorComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        var layoutInterval = this.monacoEditorConfig.autoLayoutInterval == null\n            ? DEFAULT_RELAYOUT_INTERVAL\n            : this.monacoEditorConfig.autoLayoutInterval;\n        if (layoutInterval) {\n            this.relayoutFunction = lodash_debounce_1.default(function () {\n                if (_this.editor) {\n                    _this.editor.layout();\n                }\n            }, layoutInterval);\n            this.resizeSensorInstance = this.resizeSensor.registerResize(this.monacoContainer.nativeElement, this.relayoutFunction);\n        }\n    };\n    MonacoCommonEditorComponent.prototype.ngOnChanges = function (_a) {\n        var modelUri = _a.modelUri;\n        if (modelUri && !modelUri.isFirstChange()) {\n            // If modelUri is changed, we need to recreate the editor to reflect the change.\n            this.initEditor();\n        }\n    };\n    MonacoCommonEditorComponent.prototype.ngOnDestroy = function () {\n        this.dispose();\n        if (this.resizeSensorInstance) {\n            this.resizeSensorInstance.detach(this.relayoutFunction);\n        }\n        this.relayoutFunction = null;\n        this.resizeSensorInstance = null;\n        this.destroyed = true;\n    };\n    MonacoCommonEditorComponent.prototype.dispose = function () {\n        if (this.editor) {\n            this.editor.dispose();\n        }\n        if (this.model && !this.model.isDisposed()) {\n            this.model.dispose();\n        }\n        this.disposables.forEach(function (disposable) { return disposable.dispose(); });\n        this.editor = null;\n        this.model = null;\n        this.disposables = [];\n    };\n    MonacoCommonEditorComponent.prototype.writeValue = function (value) {\n        this._value = value || '';\n        // Fix for value change while dispose in process.\n        if (this.editor) {\n            this.updateEditorValue(this._value);\n        }\n    };\n    MonacoCommonEditorComponent.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    MonacoCommonEditorComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    MonacoCommonEditorComponent.prototype.createModel = function (value, uri) {\n        var monaco = this.monacoProvider.monaco;\n        return monaco.editor.createModel(value, this.options.language, uri ? monaco.Uri.parse(uri) : undefined);\n    };\n    MonacoCommonEditorComponent.prototype.initEditor = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.monacoProvider.initMonaco()];\n                    case 1:\n                        _a.sent();\n                        this.monacoLoaded = true;\n                        this.dispose();\n                        if (!this.destroyed) {\n                            this.editor = this.createEditor();\n                            this.listenModelChanges();\n                            this.monacoEditorChanged.emit(this.editor);\n                            this.modelId = this.model.id;\n                            this.cdr.markForCheck();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MonacoCommonEditorComponent.prototype.listenModelChanges = function () {\n        var _this = this;\n        this.disposables = [];\n        this.disposables.push(this.model.onDidChangeContent(function () {\n            var value = _this.model.getValue();\n            if (_this._value === value) {\n                return;\n            }\n            _this.onChange(value);\n            _this._value = value;\n            _this.cdr.markForCheck();\n        }));\n        this.disposables.push(this.editor.onDidChangeModel(function () {\n            _this.cdr.markForCheck();\n        }));\n        this.disposables.push(this.editor.onDidBlurEditorWidget(function () {\n            _this.onTouched();\n            _this.blur.emit();\n        }));\n    };\n    MonacoCommonEditorComponent.prototype.updateEditorValue = function (value) {\n        this.model.setValue(value);\n    };\n    var _a, _b;\n    __decorate([\n        core_1.ViewChild('monacoContainer'),\n        __metadata(\"design:type\", typeof (_a = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _a : Object)\n    ], MonacoCommonEditorComponent.prototype, \"monacoContainer\", void 0);\n    __decorate([\n        core_1.ViewChild('monacoAnchor'),\n        __metadata(\"design:type\", typeof (_b = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _b : Object)\n    ], MonacoCommonEditorComponent.prototype, \"monacoAnchor\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], MonacoCommonEditorComponent.prototype, \"options\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], MonacoCommonEditorComponent.prototype, \"modelUri\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", Object)\n    ], MonacoCommonEditorComponent.prototype, \"monacoEditorChanged\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", Object)\n    ], MonacoCommonEditorComponent.prototype, \"blur\", void 0);\n    __decorate([\n        core_1.HostBinding('attr.model-id'),\n        __metadata(\"design:type\", String)\n    ], MonacoCommonEditorComponent.prototype, \"modelId\", void 0);\n    return MonacoCommonEditorComponent;\n}());\nexports.MonacoCommonEditorComponent = MonacoCommonEditorComponent;\n"],"mappings":"AACA","sourceRoot":""}